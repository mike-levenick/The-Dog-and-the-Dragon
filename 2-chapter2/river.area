#!/bin/bash

# Welcome message
echo "You have arrived at the river where the farmer's son likes to sit and read."

# Save our "parameters" as easy-to-find variables
name=$1

# Get the directory of the current script
script_dir="$(dirname "$0")"

# Get the save file location
savelocation="$script_dir/../gamesaves/$name"

take() {
    # Get chapter
    chapter=$(bash $script_dir/../inventory/CheckChapter.sh $name)
    
    bash $script_dir/../inventory/CheckInventory.sh $name $1 silent
    if (( "$?" == "1" )); then
        echo "Silly puppy, you already have a $1."
        return 0
    fi
    case $1 in
        storybook)
            if [[ "$chapter" == "1c" ]]; then
                echo "You find the child's storybook ."
                echo "It will not appear in your inventory, but you can use the secret command"
                echo "> roll in bountiful harvest"
                echo "to get your scales."
                echo
                bash $script_dir/../inventory/UpdateChapter.sh $name "1d"
            else
                echo "Now does not seem to be the right time to harvest."
            fi
            ;;
        
        *)
            echo "There's no $1 here"
            ;;
    esac
    echo
}

help() {
    echo
    if [[ "$1" == "help" ]]; then
        echo "+----------------------------------------------------------------+"
        echo "| Achievement unlocked: Tried to break the space-time continuum. |"
        echo "+----------------------------------------------------------------+"
        return 0
    fi
    echo "Available actions include:"
    echo "  - \`inventory\` (Check your current inventory)"
    echo "  - \`questlog\` (Check on your current Quest progress)"
    echo "  - \`whoami\` (In case of existential crisis)"
    echo "  - \`look\` (Look around generally/see what there is to see)"
    echo
    echo "  - \`go <place>\` (Move to the specified place)" 
    echo "  - \`use <thing>\` (Use an item from your inventory or the environment)"
    echo
    echo "  - \`exit\` (Quits the game)"
    echo
    echo "You can also ask for help on any specific command, for example:"
    echo "\`look help\` to get help specific to the \`look\` command."
    echo
    echo "If you're ever wondering what to do next, check your \`questlog\` for ideas."
}

use() {
    # Get chapter
    chapter=$(bash $script_dir/../inventory/CheckChapter.sh $name)

    # Check if we even have the item in inventory, and if we don't, return early.
    bash $script_dir/../inventory/CheckInventory.sh $name $1
    if (( "$?" == "0" )); then
        return 0
    fi
    echo
    # Switch case for the various items that can be used in this area, including a help section.
    case $1 in
        help)
            echo "***** \`USE\` COMMAND HELP *****"
            echo "Allows you to use objects in your inventory or in the environment."
            echo "For example, if you see a lever, you could do the command" 
            echo "> use lever"
            ;;

        # Now that we're at the field, we can use our paws for real.
        paws)
            echo "You dug a little hole in the ground. The soil is fertile and looks"
            echo "like seeds could grow really well here."
            echo "And it sure was fun!!"
            bash $script_dir/../inventory/CheckInventory.sh $name "seedpouch" "silent"

            if [[ "$?" == "1" ]]; then
                echo "You can \`use seedpouch\` to plant your seeds in the hole."
            else 
                echo "Maybe there is a \`seedpouch\` you can \`take\`."
            fi
            
            # Technically by doing it this way, someone could dig a hole, leave, and come back
            # and need to dig a new hole. But I think that's ok. Digging holes is fun for dogs.
            holedug=1
            ;;

        wateringcan)
            bash $script_dir/../inventory/CheckInventory.sh $name "wateringcan-filled" "silent"
            if [[ "$?" == "1" ]]; then
                echo "Your wateringcan is filled now. \`use\` it with the command"
                echo "\`use wateringcan-filled\` now."
            else 
                echo "You approach the river, and fill your wateringcan there."
                fillCan
            fi

            ;;

        wateringcan-filled)
            if [[ "$chapter" == "1b" ]]; then
                echo "You carefullly pour water on the seeds, just as you've seen the farmer do."
                echo "The seeds sprout incredibly quickly right before your eyes!"
                echo "There is a \`bountiful harvest\` of seeds in front of you, ripe for the \`take\`ing."
                echo
                echo "Questlog Updated."
                bash $script_dir/../inventory/UpdateChapter.sh $name "1c"
            else
                echo "Now does not seem to be the right time to do that."
            fi
            ;;

        hoe)
           echo "You used the hoe." 
            ;;

        seedpouch)
            if [[ "$holedug" == "0" ]]; then
                echo "You may have a hard time planting the seeds without digging a hole first."
                echo "Do you have any way of digging a hole to plant the seeds in?"
                echo "Check your inventory, and \`use\` something that could dig holes."
            else
                echo "You used the seedpouch, and planted the seeds in the ground."
                echo "Now you need to find a way to water them."
                echo
                echo "Questlog Updated."
                bash $script_dir/../inventory/UpdateChapter.sh $name "1b"
            fi
            ;;

        *)
            echo "You don't know how to use that."
            ;;
    esac
}

look() {

    # Switch case for the various directions pupper can look.
    case $1 in
        help)
            echo
            echo "***** \`LOOK\` COMMAND HELP *****"
            echo "Allows you to look around and see what there is to see."
            echo "For example, to look to the north, you could do the command" 
            echo "> look north"
            ;;

        north)
            echo "The river stretches far and wide to the north."
            ;;

        south)
            echo "The river stretches far and wide to the south."
            ;;

        east)
            echo "You see the barnyard which you call home to the east. Beyond that,"
            echo "you see the field where the farmer grows his crops. The farmer is standing"
            echo "in his field, planting seeds. The seeds catch the sunlight and glitter brightly"
            echo "like the scales of the dragon."
            ;;

        west)
            echo "The river stretches far and wide to the west."
            ;;

        *)
            echo "You look around you in wonder. Isn't the world an amazing place?"
            ;;
    esac
}

go() {
    # Get chapter
    chapter=$(bash $script_dir/../inventory/CheckChapter.sh $name)

    # Switch case for the various directions pupper can go.
    case $1 in
        help)
            echo
            echo "***** \`GO\` COMMAND HELP *****"
            echo "Allows you to go to a specific direction."
            echo "For example, to go north, you could do the command" 
            echo "> go north"
            echo "You can also approach a specific person or object that you see near you"
            echo "with the go command such as"
            echo "> go farmer"
            echo "Finally, you can also always return to the barnyard with the command"
            echo "> go home"
            ;;

        north)
            echo "The river stretches far to the north."
            echo "There is no where for you to go from here but east."
            ;;

        south)
            echo "The river stretches far to the south."
            echo "There is no where for you to go from here but east."
            ;;

        east)
            exit 0
            ;;

        west)
            echo "The river blocks your path from heading any further west from here."
            ;;
        son)
            if [[ "$chapter" == "2b" || "$chapter" == "2c" ]]; then
                echo "The farmer's son takes the book from your mouth, a look of joy on his face."
                echo "He sits down and pats the ground next to him, encouraging you to sit."
                echo "Then, he opens the cover, and tells you about the story."
                echo
                echo "\"This is the story of a boy who wanted to learn how to talk, just like you do!"
                echo "It says the first words anyone must learn how to say are 'hello world'.\""
                echo
                echo "\"If you wish to learn to talk, you must create a script which will output the"
                echo "string \`hello world\`, and put that script inside the \`homework\` directory,"
                echo "which can be found at the root of this project."
                echo "Name your script \`$name.sh\`."
                echo
                echo "Don't worry, your progress is saved, so you can exit"
                echo "the game with the \`exit\` command, and then come back to the river, and use"
                echo "the secret command \`check homework\` when it's done.\""

                # Update chapter to 2c so we can check homework
                bash $script_dir/../inventory/UpdateChapter.sh $name "2c"

            elif [[ "$chapter" == "2a" ]]; then
                echo "As you approach the farmer's son, he appears concerned. He seems to be"
                echo "looking for his storybook which he misplaced. Maybe you can search with him?"
                echo "Use the secret command \`look for book\` to help find the storybook."
            else
                echo "The farmer's son sits quietly, reading his storybook. He smiles at you."
            fi
            ;;
        home)
            exit 0
            ;;
        *)
            echo "I'm not sure how to go there."
            ;;
    esac
}

inventory() {
    if [[ "$1" == "help" ]]; then
        echo "Not much to know about this one. Just run \`inventory\` to see what you have."
        echo
        return 0
    fi
    echo
    bash $script_dir/../inventory/PrintInventory.sh $name
}

questlog() {
    if [[ "$1" == "help" ]]; then
        echo "Not much to know about this one. Just run \`questlog\` to see what's next."
        echo
        return 0
    fi
    bash $script_dir/../inventory/PrintQuestlog.sh $name
}

action() {
    case $1 in
        take)
            take $2
            ;;
        help)
            help $2
            ;;
        use)
            use $2
            ;;
        look)
           look $2
            ;;
        go)
            go $2
            ;;
        inventory)
            inventory $2
            ;;
        questlog)
            questlog
            ;;
        whoami)
            echo "Your name is $name"
            ;;
        exit)
            # Allow confirmation bypass
            if [[ "$2" == "y" || "$2" == "Y" ]]; then
                exit 3
            fi

            # Otherwise, confirm
            echo "Are you sure you want to quit? (y/n)"
            read choice
            if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
                exit 3
            fi
            ;;
        *)
            echo "I'm not sure what you mean."
            ;;
    esac   
}

fillCan() {
    sed -i '' "s/wateringcan/wateringcan-filled/g" "$savelocation"
    echo "⭒Progress saved!⭒"
}

lookForBook() {
    # Check to make sure we're in the right chapter, and provide advice if we aren't.
    chapter=$(bash $script_dir/../inventory/CheckChapter.sh $name)

    # Stop duplicate inventory
    if [[ "$chapter" == "2b" ]]; then
        echo "You already have the book. It's time to take it to the son."
        return 0
    fi

    # Stop the cheaters
    if [[ "$chapter" != "2" && "$chapter" != "2a" ]]; then
        echo "Now is not the right time to do that."
        return 0
    fi

    echo
    echo "You find the book under a small pile of leaves. You gently pick it up."
    echo "Be sure to take the book back to the son by \`go\`ing to him with it."
    echo
    bash $script_dir/../inventory/AddInventory.sh $name "storybook"
    echo
    echo "Questlog Updated."
    bash $script_dir/../inventory/UpdateChapter.sh $name "2b"
}

checkHomework() {
    # Check to make sure we're in the right chapter.
    chapter=$(bash $script_dir/../inventory/CheckChapter.sh $name)
    if [[ "$chapter" != "2b" && "$chapter" != "2c" ]]; then
        echo "Now is not the right time to do that."
        return 0
    fi

    # Check if Homework exists or end
    if [[ -z $(find "$script_dir/../homework" -mindepth 1 -type f \( ! -name "readme.txt" \) \( ! -name ".*" \)) ]]; then
        echo "Sorry, I did not find any homework to check!"
        echo
        echo "Please be sure to put your homework in the \`homework\`"
        echo "directory in the project root."
        return 0
    fi

    # Check to be sure homework that name actually exists.
    if [ ! -f "$script_dir/../homework/$name.sh" ]; then
        echo "Sorry, I found homework to check, but none with the correct name."
        echo "Please be sure to label your homework correctly so I can find it."
        echo
        echo "Your homework should be titled \`$name.sh\`."
        return 0
    fi

    # If we got this far, we must have homework and it must have the right name.
    homeworkContents=$(bash "$script_dir/../homework/$name.sh")

    # Check the output of the script, case-insensitive.
    if [[ "${homeworkContents,,}" =~ "hello world" ]]; then
        echo "Homework is correct!"
        bash $script_dir/../art/animate.sh $script_dir/../art/dialogue/dialogue6-goodhomework.dia 1 print
    else
        echo "Hmm, that's not quite right. Your homework says:"
        echo $homeworkContents
    fi
}

# This is the loop we actually stay in for the gameplay. If we do the "secret command" correctly, we move on to the next chapter. Otherwise, stay in the loop.
while (( 1 == 1 )); do
    # Check our current chapter in case we care
    chapter=$(bash $script_dir/../inventory/CheckChapter.sh $name)
    chapter_number=$(bash $script_dir/../inventory/CheckChapter.sh $name number)

    if [[ "$chapter" == "2" ]]; then
        bash $script_dir/../art/animate.sh $script_dir/../art/dialogue/dialogue5-riverintro.dia 1 print
        sleep 1
        echo
        echo
        echo "The son appears to have lost his storybook. perhaps you should \`go\` to him."
        echo
        echo "Questlog Updated."
        bash $script_dir/../inventory/UpdateChapter.sh $name "2a"
    fi

    # Prompt for an action
    echo # Give us a linebreak
    printf "%s" "> "
    read action

    if [[ "$action" == "look for book" ]]; then
        lookForBook
        continue
    fi

    if [[ "$action" == "check homework" ]]; then
        checkHomework
        continue
    fi

    # Do the action
    action $action
done 
