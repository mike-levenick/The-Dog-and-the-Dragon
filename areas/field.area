#!/bin/bash

# Save our "parameters" as easy-to-find variables
name="$1"

# Get the directory of the current script
script_dir="$(dirname "$0")"

# Get the save file location
savelocation="$script_dir/../gamesaves/$name"

# Check our current chapter to see if this is our first time here.
# If it is not, we display the welcome message. 
# Otherwise, we'll display it after the cutscene in the loop below.
chapter=$(bash $script_dir/../utils/inventory/CheckChapter.sh "$name")

if [[ "$chapter" != "1" ]]; then
    # Welcome message for folks who have been here before
    echo "You have arrived at the field where the farmer grows his crops."
fi

holedug=0

take() {
    # Get chapter
    chapter=$(bash $script_dir/../utils/inventory/CheckChapter.sh "$name")
    
    bash $script_dir/../utils/inventory/CheckInventory.sh "$name" "$1" silent
    if [[ "$?" == "1" ]]; then
        echo "Silly puppy, you already have a $1."
        return 0
    fi
    case $1 in
        wateringcan)
            echo "The farmer is happy to let you borrow a wateringcan, but it is empty."
            echo "You'll need to find a place to fill it before it will be useful."
            echo
            bash $script_dir/../utils/inventory/AddInventory.sh "$name" "$1"

            ;;
        seedpouch)
            echo "The farmer is happy to let you borrow the seedpouch of spare seeds."
            echo "Find a place to plant them and \`use seedpouch\` to plant them."
            echo
            bash $script_dir/../utils/inventory/AddInventory.sh "$name" "$1"
            ;;
        bountiful)
            if [[ "$chapter" == "1c" ]]; then
                echo "Great work! You've collected a beautiful, bountiful harvest."
                echo "It will not appear in your inventory, but you can use the secret command"
                echo -e "> \e[36mroll in bountiful harvest\e[0m"
                echo "to get your scales."
                echo
                bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "1d"
            else
                echo "Now does not seem to be the right time to harvest."
            fi
            ;;
        *)
            echo "There's no $1 here"
            ;;
    esac
}

help() {
    bash $script_dir/../utils/PrintHelp.sh "$1"
}

use() {
    # Get chapter
    chapter=$(bash $script_dir/../utils/inventory/CheckChapter.sh "$name")

# Check if we even have the item in inventory, and if we don't, return early.
    bash $script_dir/../utils/inventory/CheckInventory.sh "$name" $1
    if [[ "$?" == "0" && "$1" != "help" ]]; then
        return 0
    fi

    # Switch case for the various items that can be used in this area, including a help section.
    case $1 in
        help)
            echo -e "\e[1m***** \`\e[32mUSE\e[0m\e[1m\` COMMAND HELP *****\e[0m"
            echo "Allows you to use objects in your inventory or in the environment."
            echo "For example, if you see a lever, you could do the command" 
            echo -e "> \e[1;32muse \e[31mlever\e[0m"
            ;;

        # Now that we're at the field, we can use our paws for real.
        paws)
            echo "You dug a little hole in the ground. The soil is fertile and looks"
            echo "like seeds could grow really well here."
            echo "And it sure was fun!!"
            bash $script_dir/../utils/inventory/CheckInventory.sh "$name" "seedpouch" "silent"

            if [[ "$?" == "1" ]]; then
                echo -e "You can \`\e[32muse \e[31mseedpouch\e[0m\` to plant your seeds in the hole."
            else 
                echo -e "Maybe there is a \`\e[31mseedpouch\e[0m\` you can \`\e[32mtake\e[0m\`."
            fi
            
            # Technically by doing it this way, someone could dig a hole, leave, and come back
            # and need to dig a new hole. But I think that's ok. Digging holes is fun for dogs.
            holedug=1
            ;;

        wateringcan)
            bash $script_dir/../utils/inventory/CheckInventory.sh "$name" "wateringcan-filled" "silent"

            if [[ "$?" == "1" ]]; then
                echo -e "Your wateringcan is filled now. \`\e[32muse\e[0m\` it with the command"
                echo -e "\`\e[32muse \e[31mwateringcan-filled\e[0m\` now."
            else 
            echo "The wateringcan is empty. You'll need to find a place to fill it."
            echo "Perhaps the river?"
            fi

            ;;

        wateringcan-filled)
            if [[ "$chapter" == "1b" ]]; then
                echo "You carefullly pour water on the seeds, just as you've seen the farmer do."
                echo "The seeds sprout incredibly quickly right before your eyes!"
                echo -e "There is a \`\e[31mbountiful harvest\e[0m\` of seeds in front of you, ripe for the \`\e[32mtake\e[0m\`ing."
                echo
                echo "Questlog Updated."
                bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "1c"
            else
                echo "Now does not seem to be the right time to do that."
            fi
            ;;

        seedpouch)
            if [[ "$holedug" == "0" ]]; then
                echo "You may have a hard time planting the seeds without digging a hole first."
                echo "Do you have any way of digging a hole to plant the seeds in?"
                echo -e "Check your inventory, and \`\e[32muse\e[0m\` something that could dig holes."
            else
                echo "You used the seedpouch, and planted the seeds in the ground."
                echo "Now you need to find a way to water them."
                echo
                echo "Questlog Updated."
                bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "1b"
            fi
            ;;

        *)
            echo "You don't know how to use that."
            ;;
    esac
}

look() {

    # Switch case for the various directions pupper can look.
    case $1 in
        help)
            echo
            echo -e "\e[1m***** \`\e[32mLOOK\e[0m\e[1m\` COMMAND HELP *****\e[0m"
            echo "Allows you to look around and see what there is to see."
            echo "For example, to look to the north, you could do the command" 
            echo -e "> \e[32mlook \e[34mnorth\e[0m"
            ;;

        around)
            echo -e "This is the field where the farmer grows his crops. The \`\e[34mfarmer\e[0m\` stands in"
            echo -e "the middle of the field. Perhaps you should try to \`\e[32mgo\e[0m\` to him and see"
            echo "what he is up to?"
            ;;

        north)
            echo "The farmer's field stretches far and wide to the north."
            ;;

        south)
            echo "The farmer's field stretches far and wide to the south."
            ;;

        east)
            echo "The farmer's field stretches far and wide to the east."
            ;;

        west)
            echo "You see the barnyard which you call home to the west. Beyond that,"
            echo "you see the river where the farmer's younger son is sitting"
            echo "on a rock reading. He appears to be trying to sound out letters and their"
            echo "sounds. Perhaps he could help you learn to talk."
            ;;

        *)
            echo "You look around you in wonder. Isn't the world an amazing place?"
            ;;
    esac    
}

go() {
    # Switch case for the various directions pupper can go.
    case $1 in
        help)
            echo -e "\e[1m***** \`\e[32mGO\e[0m\e[1m\` COMMAND HELP *****\e[0m"
            echo "Allows you to go to a specific direction."
            echo "For example, to go north, you could do the command" 
            echo -e "> \e[32mgo \e[34mnorth\e[0m"
            echo "You can also approach a specific person or object that you see near you"
            echo "with the go command such as"
            echo -e "> \e[32mgo \e[34mfarmer\e[0m"
            echo "Finally, you can also always return to the barnyard with the command"
            echo -e "> \e[32mgo \e[34mhome\e[0m"
            ;;

        north)
            echo "The field stretches far to the north, and is surrounded by a fence."
            echo "There is no where for you to go from here but west."
            ;;

        south)
            echo "The field stretches far to the south, and is surrounded by a fence."
            echo "There is no where for you to go from here but west."
            ;;

        east)
            echo "The field is surrounded to the east by a fence."
            echo "There is no where for you to go from here but west."
            ;;

        west)
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/cutscenes/travel.anim .03
            exit 0
            ;;

        farmer)
            echo "As you approach the farmer, he gestures kindly towards a nearby"
            echo "\`wateringcan\` and \`seedpouch\`. He seems like he wants you to \`take\` them."
            ;;

        home)
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/cutscenes/travel.anim .03
            exit 0
            ;;

        *)
            echo "I'm not sure how to go there."
            ;;
    esac
}

inventory() {
    if [[ "$1" == "help" ]]; then
        echo -e "Not much to know about this one. Just run \`\e[32minventory\e[0m\` to see what you have."
        return 0
    fi
    bash $script_dir/../utils/inventory/PrintInventory.sh "$name"
}

questlog() {
    if [[ "$1" == "help" ]]; then
        echo -e "Not much to know about this one. Just run \`\e[32mquestlog\e[0m\` to see what's next."
        return 0
    fi
    bash $script_dir/../utils/inventory/PrintQuestlog.sh "$name"
}

action() {
    case $1 in
        take)
            take $2
            ;;
        help)
            help $2
            ;;
        use)
            use $2
            ;;
        look)
           look $2
            ;;
        go)
            go $2
            ;;
        inventory)
            inventory $2
            ;;
        questlog)
            questlog
            ;;
        whoami)
            echo "Your name is $name"
            ;;
        exit)
            # Allow confirmation bypass
            if [[ "$2" == "y" || "$2" == "Y" ]]; then
                exit 3
            fi

            # Otherwise, confirm
            echo "Are you sure you want to quit? (y/n)"
            read choice
            if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
                exit 3
            fi
            ;;
        *)
            secretActions "$action"
            ;;
    esac   
}

secretActions() {
    case $action in
        "roll in bountiful harvest")
            bash $script_dir/../utils/inventory/AddInventory.sh "$name" "scales"
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogue4-bountifulharvest.dia 1 print
            sleep 1
            echo "Questlog Updated."
            bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "2"
            ;;
        *)
            echo "I'm not sure what you mean."
            ;;
    esac
}

# This is the loop we actually stay in for the gameplay. If we do the "secret command" correctly, we move on to the next chapter. Otherwise, stay in the loop.
while (( 1 == 1 )); do

    if [[ "$chapter" == "1" ]]; then
        bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogue3-fieldintro.dia 1 print
        sleep 1
        echo "Questlog Updated."
        bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "1a"
        
        # Welcome message here as well for new arrivals
        echo "You have arrived at the field where the farmer grows his crops."
    fi

    # Check our current chapter in case we care
    chapter=$(bash $script_dir/../utils/inventory/CheckChapter.sh "$name")

    # Prompt for an action
    echo
    printf "%s" "> "
    read action

    # Do the action
    action $action

done 
