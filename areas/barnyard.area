#!/bin/bash

# Save our "parameters" as easy-to-find variables
name="$1"

# Get the directory of the current script
script_dir="$(dirname "$0")"

# Get the save file location
savelocation="$script_dir/../gamesaves/$name"

take() {
    echo "There's nothing for you to take from the barnyard."
}

help() {
    bash $script_dir/../utils/PrintHelp.sh "$1"
}

use() {
    # Check if we even have the item in inventory, and if we don't, return early.
    bash $script_dir/../utils/inventory/CheckInventory.sh "$name" $1
    if [[ "$?" == "0" && "$1" != "help" ]]; then
        return 0
    fi

    # Switch case for the various items that can be used in this area, including a help section.
    case $1 in
        help)
            echo -e "\e[1m***** \`\e[32mUSE\e[0m\e[1m\` COMMAND HELP *****\e[0m"
            echo "Allows you to use objects in your inventory or in the environment."
            echo "For example, if you see a lever, you could do the command" 
            echo -e "> \e[1;32muse \e[31mlever\e[0m"
            ;;

        # Using paws will always "work" to give the player a way to explore their options a bit
        # but it won't always actually "do" anything, unless they're at the field
        paws)
            echo "You dug a little hole in the ground. It may not accomplish much here in"
            echo "the barnyard, but it's honest work."
            ;;

        wateringcan)
            echo "The wateringcan is empty. You'll need to find a place to fill it."
            echo "Perhaps the river?"
            ;;

        wateringcan-filled)
            echo "You probably don't want to waste the water here. Head back to the field."
            ;;

        seedpouch)
            echo "You probably don't want to spill the seeds here in the barnyard, they won't grow!"
            ;;

        *)
            echo "You don't know how to use that."
            ;;
    esac
    echo
}

look() {

    # Switch case for the various directions pupper can look.
    case $1 in
        help)
            echo
            echo -e "\e[1m***** \`\e[32mLOOK\e[0m\e[1m\` COMMAND HELP *****\e[0m"
            echo "Allows you to look around and see what there is to see."
            echo "For example, to look to the north, you could do the command" 
            echo -e "> \e[32mlook \e[34mnorth\e[0m"
            ;;
        
        around)
            if [[ "$chapter" == "5" ]]; then
                echo "The rain is pouring down. You hear the farmer's son in the well,"
                echo "and see the family standing around the well looking scared."
                echo
                echo -e "Maybe you should try to \`\e[32mgo\e[0m\` to the \`\e[34mwell\e[0m\` and see if you can help."
            else
                echo "This is the barnyard that you call home. There's not a lot here other"
                echo "than an old well, but you can see all sorts of other interesting places"
                echo "around that might be worth visiting."
                echo
                echo -e "Try looking in different directions, such as \`\e[32mlook\e[34m east\e[0m\`."
            fi
            ;;

        north)
            echo "You see the barn to the north of you. There are some interesting machines that"
            echo "are often used for lifting and lowering haybales there. Maybe those machines"
            echo "could help you fly?"
            ;;

        south)
            echo "You see the farmhouse to the south. The farmer's wife is cooking a meal."
            echo "It smells absolutely delicious, but you know you're not normally allowed"
            echo "into the house with the family."
            ;;

        east)
           echo "You see the field where the farmer grows his crops. The farmer is standing"
           echo "in his field, planting seeds. The seeds catch the sunlight and glitter brightly"
           echo "like the scales of the dragon."
            ;;

        west)
            echo "You see the river to the west, where the farmer's younger son is sitting"
            echo "on a rock reading. He appears to be trying to sound out letters and their"
            echo "sounds. Perhaps he could help you learn to talk."
            ;;

        *)
            echo "You look around you in wonder. Isn't the world an amazing place?"
            ;;
    esac
}

go() {
    # Get the chapter
    chapter=$(bash $script_dir/../utils/inventory/CheckChapter.sh "$name")

    # Switch case for the various directions pupper can go.
    case $1 in
        help)
            echo -e "\e[1m***** \`\e[32mGO\e[0m\e[1m\` COMMAND HELP *****\e[0m"
            echo "Allows you to go to a specific direction."
            echo "For example, to go north, you could do the command" 
            echo -e "> \e[32mgo \e[34mnorth\e[0m"
            echo "You can also approach a specific person or object that you see near you"
            echo "with the go command such as"
            echo -e "> \e[32mgo \e[34mfarmer\e[0m"
            echo "Finally, you can also always return to the barnyard with the command"
            echo -e "> \e[32mgo \e[34mhome\e[0m"
            ;;

        well)
            if [[ "$chapter" == "5" ]]; then
                echo "You approach the well, your scales glistening wet in the rain. It looks like"
                echo "you could hook the rope from the well to your harness, but you'll need help."
                echo
                echo -e "Perhaps you could \`\e[36mwrite in dirt\e[0m\` to ask the farmer for help?"
            else
                echo "There's an old well here in the barnyard. It is deep and dark, with water"
                echo "at the bottom. There is an old crank to raise and lower the bucket"
                echo "but you're not sure how to operate it."
            fi
            ;;

        boldly)
            if [[ "$chapter" == "5" ]]; then
                bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogueC-goboldly.dia 1 print
                bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "6"
                bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogueD-homeinvite.dia 1 print
            else
                echo "I'm not sure how to go there."
            fi
            ;;

        north)
            # Do the action
            if [[ "$chapter" == "1"* || "$chapter" == "2"* ]]; then
                echo "You see some machines in the barn, but you won't be able to understand them yet."
                echo "Get some scales and learn to talk before heading north."
            else
                bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/cutscenes/travel.anim .03
                bash $script_dir/../areas/barn.area "$name"

                # Quit all the way if we get exit code 3
                if [[ "$?" == "3" ]]; then
                    exit 0
                fi

                echo "You find yourself in the barnyard which you call home. What do you want to do?"
            fi
            ;;

        south)
            # Check our current chapter to see if it's time to go south
            chapter=$(bash $script_dir/../utils/inventory/CheckChapter.sh "$name")

            # Do the action
            if [[ "$chapter" != "6"* ]]; then
                echo "You see the farmhouse to the south. The farmer's wife is cooking a meal."
                echo "It smells absolutely delicious, but you know you're not normally allowed"
                echo "into the house with the family."
            else
                bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/cutscenes/travel.anim .03
                bash $script_dir/../areas/house.area "$name"

                # Quit all the way if we get exit code 3
                if [[ "$?" == "3" ]]; then
                    exit 0
                fi

                echo "You find yourself in the barnyard which you call home. What do you want to do?"
            fi
            ;;

        east)
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/cutscenes/travel.anim .03
            bash $script_dir/../areas/field.area "$name"

            # Quit all the way if we get exit code 3
            if [[ "$?" == "3" ]]; then
                exit 0
            fi

            echo "You find yourself in the barnyard which you call home. What do you want to do?"
            ;;

        west)
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/cutscenes/travel.anim .03
            bash $script_dir/../areas/river.area "$name"

            # Quit all the way if we get exit code 3
            if [[ "$?" == "3" ]]; then
                exit 0
            fi

            echo "You find yourself in the barnyard which you call home. What do you want to do?"
            ;;

        home)
            echo "You are already in the barnyard."
            ;;

        *)
            echo "I'm not sure how to go there."
            ;;

    esac
}

inventory() {
    if [[ "$1" == "help" ]]; then
        echo -e "Not much to know about this one. Just run \`\e[32minventory\e[0m\` to see what you have."
        return 0
    fi
    bash $script_dir/../utils/inventory/PrintInventory.sh "$name"
}

questlog() {
    if [[ "$1" == "help" ]]; then
        echo -e "Not much to know about this one. Just run \`\e[32mquestlog\e[0m\` to see what's next."
        return 0
    fi
    bash $script_dir/../utils/inventory/PrintQuestlog.sh "$name"
}

action() {
    case $1 in
        take)
            take $2
            ;;

        help)
            help $2
            ;;

        use)
            use $2
            ;;

        look)
           look $2
            ;;

        go)
            go $2
            ;;

        inventory)
            inventory $2
            ;;

        questlog)
            questlog
            ;;

        whoami)
            echo "Your name is $name"
            ;;

        exit)
            # Allow confirmation bypass
            if [[ "$2" == "y" || "$2" == "Y" ]]; then
                exit 0
            fi

            # Otherwise, confirm
            echo "Are you sure you want to quit? (y/n)"
            read choice
            if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
                exit 0
            fi
            ;;

        *)
            secretActions "$action"
            ;;
    esac   
}

secretActions() {
    case $action in
        "write in dirt")
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogueB-writeindirt.dia 1 print
            echo
            echo -e "It is time for you to once again \`\e[36mgo boldly\e[0m\` where no dog has gone before."
            ;;
        *)
            echo "I'm not sure what you mean."
            ;;
    esac
}

endGamePrompt() {
    case $action in
        "go house")
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogueE-goodending.dia 1 print
            bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "8"
            playCredits
            ;;

        "go south")
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogueE-goodending.dia 1 print
            bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "8"
            playCredits
            ;;

        "go barn")
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogueE-badending.dia 1 print
            bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "7"
            playCredits
            ;;
        
        "go north")
            bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/dialogue/dialogueE-badending.dia 1 print
            bash $script_dir/../utils/inventory/UpdateChapter.sh "$name" "7"
            playCredits
            ;;

        *)
            echo -e "Sorry. This is a bit of a railroad. You must either \`\e[32mgo \e[34mhouse\e[0m\` or \`\e[32mgo \e[34mbarn\e[0m\`."
    esac
}

playCredits() {
    bash $script_dir/../utils/animation/animate.sh $script_dir/../utils/animation/cutscenes/credits.anim .25 scroll
    echo
    printf "%s" "Press enter to exit the game."
    read
    exit 0
}

# This is the loop we actually stay in for the gameplay. 
# If we do the "secret command" correctly, we move on to the next chapter. 
# Otherwise, stay in the loop.
while (( 1 == 1 )); do

    # Check our current chapter in case we care
    chapter=$(bash $script_dir/../utils/inventory/CheckChapter.sh "$name")

    if [[ "$chapter" == "6" ]]; then
        echo "The rain is pouring down on you. You should find some shelter."
        echo
        echo -e "Where would you like to \`\e[32mgo\e[0m\`?"
    fi

    # Prompt for an action
    echo
    printf "%s" "> "
    read action

    # Do the action based on the chapter
    if [[ "$chapter" == "6" ]]; then
        endGamePrompt
    else
        action $action
    fi
done 
